<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.iot.common.dao.BoardDao">
	
	<!-- Create -->
	<insert id="insert" parameterType="Board"
			keyColumn = "board_id" keyProperty="boardId">
		insert into board(
			board_id, user_id, reg_date, reg_date_str, sleep_time, 
			day_night, update_date)
		values (board_seq.nextval, #{userId}, #{regDate}, #{regDateStr}, #{sleepTime},
			 #{dayNight}, sysdate)
	</insert>
	
	
	<!-- Read -->
	<select id="count" parameterType="String" resultType="int">
		select count(*)
		from board
		where user_id = #{userId}
	</select>
	
	<select id="findById" parameterType="long" resultType="Board">
		select * from board
		where board_id = #{boardId}
	</select>
	
	<select id="getList" resultType="Board"><![CDATA[
		select * from board
	]]></select>
	
	<!-- 목록용으로  memo 칼럼은 제외 -->
	<select id="getPage1" parameterType="map"
						resultType="Board">
		select board_id, reg_date, sleep_time, wakeup_time, total_time, day_night, memo, update_date
		from (
			select row_number() over (order by reg_date desc) as seq,
					board_id, reg_date, sleep_time, wakeup_time, total_time, day_night, memo, update_date
			from board
			where user_id = #{userId}
		)
		where seq between #{pageMap.start} and #{pageMap.end}
		order by board_id desc					
	</select>
	
		<!-- 목록용으로  memo 칼럼은 제외 -->
	<select id="getPage2" parameterType="String" resultType="Board">
		select user_id, board_id, reg_date, reg_date_str, sleep_time, wakeup_time, total_time, day_night, memo, update_date
		from (
			select row_number() over (order by reg_date desc) as seq,
					user_id, board_id, reg_date, reg_date_str, sleep_time, wakeup_time, total_time, day_night, memo, update_date
			from board		
			where user_id = #{userId}
		)
		where seq between 1 and 20
		order by board_id desc					
	</select>
	
	<!-- 가장 최근 목록 가져오기 -->
	<select id="getLastBoard" parameterType="String" resultType="Board">
		select board_id, reg_date, reg_date_str, sleep_time, wakeup_time, total_time, day_night, update_date
		from (
			select row_number() over (order by board_id desc) as seq,
					board_id, user_id, reg_date, reg_date_str, sleep_time, wakeup_time, total_time, day_night, update_date
			from board
			where user_id = #{userId}
		)
		where seq = 1
	</select>
	
	
	<!-- Update -->
	<!-- 메모 추가용 -->
	<update id="updateMemo" parameterType="Board">
		update board set 
			memo = #{memo}
		where board_id=#{boardId}
	</update>
	
		<!--기상 시간 추가용 -->
	<update id="updateWakeup" parameterType="Board">
		update board set 
			wakeup_time = #{wakeupTime},
			total_time = #{totalTime},
			update_date = #{updateDate}
		where board_id=#{boardId}
	</update>
	
	
	<!-- Delete -->
	<!-- 게시글 삭제, 비밀번호를 아는 경우에 수정 가능 -->
	<delete id="delete" parameterType="Board">
		delete from board
		where board_id = #{boardId}
	</delete>


</mapper>